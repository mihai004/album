imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
#    - { resource: "@UserBundle/Resources/config/services.yml" }
    - { resource: "@AlbumBundle/Resources/config/services.yml" }
#    - { resource: "@ReviewBundle/Resources/config/services.yml" }
    - { resource: "@SearchBundle/Resources/config/services.yml" }
#    - { resource: "@TrackBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    uploads_directory: '%kernel.project_dir%/web/public/uploads_directory'
    commandName: 'populate:search:entities'
    page_limit: 6


framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: true
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
        engines: ['twig']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
      - 'bootstrap_4_horizontal_layout.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

sensio_framework_extra:
   router:
        annotations: false

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AlbumBundle\Entity\User
    registration:
        form:
            type: AlbumBundle\Form\RegistrationFormType
    profile:
        form:
          type: AlbumBundle\Form\ProfileFormType
    resetting:
        email:
            from_email:
                address: "%mailer_user%"
                sender_name: "%mailer_user%"
        token_ttl: 500
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: false # Version >=1.2 Possible values are: "BY_YEAR", "BY_YEAR_AND_MONTH", false

assetic:
    filters:
      cssrewrite: ~
    assets:
        css:
            inputs:
                - '../app/Resources/public/css/*'

knp_paginator:
    page_range: 5                       # number of links showed in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
    default_options:
        page_name: page                 # page query parameter name
        sort_field_name: sort           # sort field query parameter name
        sort_direction_name: direction  # sort direction query parameter name
        distinct: true                  # ensure distinct results, useful when ORM queries are using GROUP BY statements
        filter_field_name: filterField  # filter field query parameter name
        filter_value_name: filterValue  # filter value query parameter name
    template:
        pagination: '@KnpPaginator/Pagination/sliding.html.twig'     # sliding pagination controls template
        sortable: '@KnpPaginator/Pagination/sortable_link.html.twig' # sort link template
        filtration: '@KnpPaginator/Pagination/filtration.html.twig'  # filters template

easy_admin:
    design:
        menu:
          - { entity: 'User', icon: 'user' }
          - { entity: 'Album' }
    entities:
        - AlbumBundle\Entity\User
        - AlbumBundle\Entity\Album

jms_serializer:
    metadata:
      directories:
        FOSUB:
          namespace_prefix: "FOS\\UserBundle"
          path: "%kernel.root_dir%/serializer/FOSUserBundle"
        src:
          namespace_prefix: "AlbumBundle"
          path: "%kernel.root_dir%/serializer/AlbumBundle"

nelmio_api_doc:
  documentation:
    schemes: [http, https]
    info:
      title: Music Review API
      description: This is the documentation for the Music Review website.
      version: 1.0.0
    securityDefinitions:
      Bearer:
        type: apiKey
        description: 'Value: Bearer {jwt}'
        name: Authorization
        in: header
    security:
      - Bearer: []
  areas:
    path_patterns: # an array of regexps
      - ^/api

# FOSOAuthServerBundle Configuration
fos_oauth_server:
  db_driver: orm
  client_class:        AlbumBundle\Entity\Client
  access_token_class:  AlbumBundle\Entity\AccessToken
  refresh_token_class: AlbumBundle\Entity\RefreshToken
  auth_code_class:     AlbumBundle\Entity\AuthCode
  service:
    user_provider: fos_user.user_provider.username
    options:
      access_token_lifetime: 86400
      refresh_token_lifetime: 1209600
      auth_code_lifetime: 30
#      supported_scopes:
#        - user

fos_rest:
  routing_loader:
    default_format: json
    include_format: false   # All responses should be JSON formatted according to the requirement.
    # There is no need to include format in request and thereby it default to JSON format.

#    exception:
#      enabled: true
#      exception_controller: 'AlbumBundle\Controller\ExceptionController::showAction'
#    body_listener: true
#      param_fetcher_listener: true
#      view:
#        view_response_listener: 'force'
#        exception_wrapper_handler:  null
#        formats:
#          jsonp: true
#          json: true
#          xml: false
#          rss: false
#        mime_types:
#          json: ['application/json', 'application/x-json']
#          jpg: 'image/jpeg'
#          png: 'image/png'
#        jsonp_handler: ~
#      routing_loader:
#        default_format:  json
#        include_format:  false
#      format_listener:
#        rules:
#          - path: ^/
#          - priorities: [ json, jsonp ]
#          - fallback_format: ~
#          - prefer_extension: true
#      exception:
#        enabled: true