# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    encoders:
        UserBundle\Entity\User: bcrypt # algorithm to use before saving the user

    role_hierarchy:
        ROLE_USER:       ROLE_USER
        ROLE_ADMIN:      ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email # or  fos_user.user_provider.username --> if emails does not exist

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
#            user_checker: security.user_checker
            guard: # can be used in time for API authentication on top of form_login
                authenticators:
                    - app.security.login_form_authenticator

#            form_login:
#                provider: fos_userbundle
#                csrf_token_generator: security.csrf.token_manager
#                success_handler: app.authentication.success_handler

            logout:       true
            anonymous:    true
            logout_on_user_change:  true # to address deprecation
            remember_me:
                secret: '%secret%' # to enable remember me

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/view_reviews_by_album, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/search, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/profile/edit, role: ROLE_USER }
        - { path: ^/add_album, role: ROLE_USER }
        - { path: ^/delete_album/, role: ROLE_ADMIN }
        - { path: ^/add_review/, role: ROLE_USER }
        - { path: ^/edit_review, role: ROLE_USER }
        - { path: ^/delete_review/, role: ROLE_USER }
        - { path: ^/view_reviews_by_user, role: ROLE_USER }
        - { path: ^/admin, role: ROLE_ADMIN }
